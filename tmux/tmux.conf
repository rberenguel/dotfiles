# Set Ctrl+p as the new prefix
unbind C-b
set-option -g prefix C-p
bind-key C-p send-prefix

# Set the refresh interval for the status bar
set -g status-interval 1

# General appearance
set -g default-terminal "screen-256color" # Enable 256-color support
set -g history-limit 10000 # Increase scrollback history

# Status bar
set -g status-position bottom # Position status bar at the bottom
set -g status-interval 1 # Update status bar every second
set -g status-justify left # Align window names to the left

# Colors
set -g status-bg '#282a36' # Dracula background
set -g status-fg '#f8f8f2' # Dracula foreground
set -g pane-border-style fg='#006666' # Dull cyan
set -g pane-active-border-style fg='#cc6600' # My usual orange 

# Mouse support
set -g mouse on
#set -g mouse-resize-pane on
bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -n DoubleClick1Status choose-tree
bind-key -n MouseDown3Status choose-tree

# Mouse mode bindings: M to turn on, m to turn off
bind M set-option -g mouse on \; display-message "Mouse: on"
bind m set-option -g mouse off \; display-message "Mouse: off"

# Mouse wheel bindings for scrolling
bind -n WheelUpPane { if -F '#{||:#{pane_in_mode},#{mouse_any_flag}}' { send -M } { if -F '#{alternate_on}' { send-keys -N 3 Up } { copy-mode -e } } }
bind -n WheelDownPane { if -F '#{||:#{pane_in_mode},#{mouse_any_flag}}' { send -M } { if -F '#{alternate_on}' { send-keys -N 3 Down} } }

# Left status section (session name)
set -g status-left-length 30
set -g status-left '#[fg=#f8f8f2,bg=#6272a4,bold] #S #[fg=#6272a4,bg=#282a36,nobold]ÓÇ∞' # Session name with separator

# Window list (center status)
set -g window-status-current-style fg='#f8f8f2',bg='#44475a',bold # Current window
set -g window-status-current-format ' #I:#W#F ' # Current window format (index:nameflags)
set -g window-status-style fg='#f8f8f2',bg='#282a36' # Other windows
set -g window-status-format ' #I:#W#F ' # Other window format

# Right status section (host, date, time)
set -g status-right-length 50
set -g @right_sep "#[fg=#6272a4,bg=#282a36,nobold]ÓÇ≤#[fg=#f8f8f2,bg=#6272a4] "
set -g status-right '#{@right_sep} \
#(cd #{pane_current_path}; if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then basename "$(git rev-parse --show-toplevel)"; else echo "(no)"; fi)\
 | #{?mouse,üê≠,}\
 | #(TZ='Europe/Zurich' date +'%%H:%%M') %d-%b-%y #[fg=#f8f8f2,bg=#6272a4,bold]'

# Pane splitting
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Disable automatic window renaming
set-option -g allow-rename off

# Custom pane navigation (Colemak friendly)
bind n select-pane -L
bind o select-pane -R
bind i select-pane -U
bind e select-pane -D

# Window navigation
bind , previous-window
bind . next-window

# Rename window
bind-key r command-prompt "rename-window '%%'"



############

bind C-t display-popup \
  -d "#{pane_current_path}" \
  -w 75% \
  -h 75% \
  -E "zsh"


bind d display-menu -T "#[align=centre]Dotfiles" -x C -y C \
  ".zshrc"            z  "display-popup -E 'vim ~/.zshrc'" \
  ".tmux.conf"        t  "display-popup -E 'vim ~/.tmux.conf'" \
  "dotfiles"          g  "display-popup -d '/Users/ruben/code/dotfiles' -E 'zsh'" \
  "Exit"              q  ""

bind-key g run-shell "cd #{pane_current_path} && REPO_NAME=\$(git config --get remote.origin.url | awk -F'[/:]' '{print \$NF}' | sed 's/\\.git$//'); open https://github.com/rberenguel/\$REPO_NAME"

